package uz.coder.daggerhilt.diimport android.content.Contextimport androidx.room.Roomimport dagger.Moduleimport dagger.Providesimport dagger.hilt.InstallInimport dagger.hilt.android.qualifiers.ApplicationContextimport dagger.hilt.components.SingletonComponentimport uz.coder.daggerhilt.database.AppDatabaseimport uz.coder.daggerhilt.database.dao.UserDaoimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)class DatabaseModule {    @Provides    @Singleton    fun provideAppDatabase(@ApplicationContext context: Context): AppDatabase {        return Room.databaseBuilder(context, AppDatabase::class.java, "my_db")            .fallbackToDestructiveMigration()            .build()    }    @Provides    @Singleton    fun provideUserDao(appDatabase: AppDatabase): UserDao = appDatabase.userDao()}